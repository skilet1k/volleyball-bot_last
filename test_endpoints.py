#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ endpoints –±–æ—Ç–∞
"""
import asyncio
import aiohttp
import json
from datetime import datetime

async def test_endpoints():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –≤—Å–µ endpoints –±–æ—Ç–∞"""
    base_url = "http://localhost:8000"  # –î–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    # –î–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞ –∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞: https://volleyball-bot-last.onrender.com
    
    endpoints = [
        "/",
        "/health", 
        "/status",
        "/ping",
        "/monitor"
    ]
    
    async with aiohttp.ClientSession() as session:
        print(f"–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ endpoints –Ω–∞ {base_url}")
        print("=" * 50)
        
        for endpoint in endpoints:
            url = f"{base_url}{endpoint}"
            try:
                async with session.get(url, timeout=10) as response:
                    content = await response.text()
                    print(f"‚úÖ {endpoint}: {response.status}")
                    
                    # –û—Å–æ–±–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ JSON endpoints
                    if endpoint in ["/status"]:
                        try:
                            data = json.loads(content)
                            print(f"   üìã JSON: {data}")
                        except:
                            print(f"   üìÑ Text: {content[:100]}...")
                    else:
                        print(f"   üìÑ Content: {len(content)} chars")
                        
            except Exception as e:
                print(f"‚ùå {endpoint}: ERROR - {e}")
            
            print()

if __name__ == "__main__":
    print("ü§ñ Volleyball Bot - Endpoint Tester")
    print(f"‚è∞ {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    print()
    
    asyncio.run(test_endpoints())
